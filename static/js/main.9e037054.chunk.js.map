{"version":3,"sources":["assets/noPosterSmall.png","api.js","components/Header.js","components/Section.js","components/Loader.js","components/Poster.js","components/Message.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/Videos.js","Routes/Detail/Productions.js","Routes/Detail/Seasons.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesAPI","get","id","append_to_response","term","query","tvAPI","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","Loader","role","Image","bgImg","Rating","ImageContainer","Year","Poster","imageURL","rating","year","isMovie","require","default","length","substring","Text","color","Error","propTypes","text","PropTypes","string","isRequired","Message","HomePresenter","nowPlaying","upComing","Popular","error","loading","Helmet","map","movie","poster_path","release_date","substr","vote_average","HomeContainer","state","TopRated","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","searchTerm","onChange","tvResults","handleSubmit","onSubmit","placeholder","type","value","show","name","first_air_date","SearchContainer","event","preventDefault","searchbyTerm","target","bind","TVPresenter","AiringToday","TVContainer","Videos","result","useState","page","setPage","videos","IFRAME","frameBorder","src","key","Pagination","onClick","prev","className","iframe","IMG","Productions","production_companies","production_countries","console","log","company","logo_path","country","iso_3166_1","toLowerCase","Seasons","seasons","season","idx","air_date","Backdrop","Cover","Content","Data","Divider","ItemContainer","Summary","p","TabContent","activeTab","Menu","Tabs","Tab","button","isActive","DetailPresenter","match","setActiveTab","backdrop_path","genres","genre","join","runtime","episode_run_time","href","imdb_id","overview","DetailContainer","includes","push","history","parsedID","parseInt","isNaN","onClickMenu","Router","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e037054.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.b0227c64.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"fe8acd6deeecdba4087d68916f55a417\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesAPI = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upComing: () => api.get(\"movie/upcoming\"),\n  TopRated: () => api.get(\"movie/top_rated\"),\n  Popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: term,\n      },\n    }),\n};\nexport const tvAPI = {\n  TopRated: () => api.get(\"tv/top_rated\"),\n  Popular: () => api.get(\"tv/popular\"),\n  AiringToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n    margin-bottom:50px;\r\n    }\r\n`;\r\nconst Title = styled.span`\r\n    font-size:14px;\r\n    font-weight:600;\r\n    \r\n`;\r\nconst Grid  =styled.div`\r\n    margin-top:25px;\r\n    display:grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap:25px;\r\n`;\r\n\r\n\r\nconst Section = ({title, children})=>(\r\n        <Container>\r\n            <Title>{title}</Title>\r\n            <Grid>{children}</Grid>\r\n        </Container>\r\n);\r\n\r\n\r\nSection.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    children:PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node)],\r\n        PropTypes.node\r\n    )\r\n}\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height:100vh;\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n    font-size:20px;\r\n    margin-top:20px;\r\n    \r\n`;\r\n\r\nconst Loader = ()=>\r\n    <Container>\r\n        <span role='img' aria-label=\"Loading\">Loading...⏰</span>\r\n    </Container>;\r\nexport default Loader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  height: 200px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgImg});\n  background-size: cover;\n  height: 180px;\n  width: 100%;\n  background-position: center center;\n  border-radius: 15px;\n  transition: 0.5s linear;\n`;\nconst Rating = styled.span`\n  z-index: 10;\n  bottom: 10px;\n  right: 10px;\n  position: absolute;\n  font-size: 12px;\n  opacity: 0;\n  transition: 0.5s linear;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 3px;\n  position: relative;\n\n  &:hover {\n    ${Image} {\n      opacity: 0.5;\n      border: 0.3mm solid skyblue;\n    }\n\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n\n}\n`;\nconst Title = styled.span`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 3px;\n  font-size: 12px; ;\n`;\n\nconst Year = styled.span`\n  text-align: start;\n  font-size: 12px;\n  opacity: 0.5;\n`;\n\nconst Poster = ({ imageURL, id, title, rating, year, isMovie = false }) => {\n  return (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n      <Container>\n        <ImageContainer>\n          <Image\n            bgImg={\n              imageURL\n                ? `https://image.tmdb.org/t/p/w300/${imageURL}`\n                : require(\"../assets/noPosterSmall.png\").default\n            }\n          />\n          <Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              ⭐\n            </span>\n            {rating}/10\n          </Rating>\n        </ImageContainer>\n        <Title>\n          {title.length > 15 ? `${title.substring(0, 15)}...` : title}\n        </Title>\n        <Year>{year}</Year>\n      </Container>\n    </Link>\n  );\n};\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageURL: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n};\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display:flex;\n    justify-content:center;\n`;\n\nconst Text = styled.span`\n    color: ${props=>props.color};\n`;\n\nconst Message= ({ color,text }) => (\n  <Container>\n    <Text color={color}>\n      {text}\n    </Text>\n  </Container>\n);\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Message;","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport Section from \"components/Section\";\nimport Loader from \"../../components/Loader\";\nimport Poster from \"../../components/Poster\";\nimport Message from \"../../components/Message\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upComing, Popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title> Movies | Nomflix </title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                imageURL={movie.poster_path}\n                id={movie.id}\n                title={movie.title}\n                year={movie.release_date.substr(0, 4)}\n                rating={movie.vote_average}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upComing && upComing.length > 0 && (\n          <Section title=\"Upcoming\">\n            {upComing.map((movie) => (\n              <Poster\n                imageURL={\n                  movie.poster_path || require(\"../../assets/noPosterSmall.png\")\n                }\n                id={movie.id}\n                title={movie.title}\n                year={movie.release_date.substr(0, 4)}\n                rating={movie.vote_average}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {Popular && Popular.length > 0 && (\n          <Section title=\"Popular\">\n            {Popular.map((movie) => (\n              <Poster\n                imageURL={\n                  movie.poster_path || require(\"../../assets/noPosterSmall.png\")\n                }\n                id={movie.id}\n                title={movie.title}\n                year={movie.release_date.substr(0, 4)}\n                rating={movie.vote_average}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#FF0000\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upComing: PropTypes.array,\n  Popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { CoinsAPI, moviesAPI, PricesAPI } from \"../../api\";\n\nexport default class HomeContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      nowPlaying: null,\n      upComing: null,\n      TopRated: null,\n      Popular: null,\n      error: null,\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: Popular },\n      } = await moviesAPI.Popular();\n      const {\n        data: { results: nowPlaying },\n      } = await moviesAPI.nowPlaying();\n      const {\n        data: { results: upComing },\n      } = await moviesAPI.upComing();\n\n      this.setState({ nowPlaying, Popular, upComing });\n    } catch {\n      this.setState({ error: \"Cant find movies information\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upComing, Popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upComing={upComing}\n        Popular={Popular}\n        error={error}\n        loading={loading}\n      ></HomePresenter>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Section from \"../../components/Section\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n  margin-top: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\nconst Input = styled.input`\n  all: unset;\n  color: white;\n  width: 100%;\n  font-size: 25px;\n  text-align: center;\n\n  :focus {\n    text-decoration: underline;\n  }\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  searchTerm,\n  onChange,\n  tvResults,\n  error,\n  loading,\n  handleSubmit,\n}) => {\n  return (\n    <>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"Search Movies or TV Shows\"\n            type=\"text\"\n            value={searchTerm}\n            onChange={onChange}\n          />\n        </Form>\n      </Container>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Container>\n            {movieResults && movieResults.length > 0 && (\n              <Section title=\"Movie Results\">\n                {movieResults.map((movie) => (\n                  <Poster\n                    imageURL={movie.poster_path}\n                    id={movie.id}\n                    title={movie.title}\n                    year={movie.release_date?.substr(0, 4)}\n                    rating={movie.vote_average}\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n          </Container>\n          <Container>\n            {tvResults && tvResults.length > 0 && (\n              <Section title=\"TV Show Results\">\n                {tvResults.map((show) => (\n                  <Poster\n                    imageURL={\n                      show.poster_path ||\n                      require(\"../../assets/noPosterSmall.png\").default\n                    }\n                    id={show.id}\n                    title={show.name}\n                    year={show.first_air_date?.substr(0, 4)}\n                    rating={show.vote_average}\n                  />\n                ))}\n              </Section>\n            )}\n          </Container>\n        </>\n      )}\n      {error && <Message color=\"red\" text={error} />}\n      {movieResults &&\n        movieResults.length === 0 &&\n        tvResults &&\n        tvResults.length === 0 && <Message text=\"Nothing Found.\" />}\n    </>\n  );\n};\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n};\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer'\r\n\r\nexport default SearchContainer","import React from 'react'\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport {moviesAPI, tvAPI} from \"../../api\";\r\n\r\nexport default class SearchContainer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            searchTerm: \"\",\r\n            movieResults: null,\r\n            tvResults: null,\r\n            error: null,\r\n            loading: false,\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n\r\n        if (searchTerm !== '') {\r\n            this.searchbyTerm();\r\n        }\r\n        this.setState({searchTerm: \"\"});\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({searchTerm: event.target.value});\r\n    }\r\n\r\n    async searchbyTerm() {\r\n        const {searchTerm} = this.state;\r\n        try {\r\n            this.setState({loading: true});\r\n\r\n            const {data: {results: movieResults}} = await moviesAPI.search(searchTerm);\r\n\r\n            const {data: {results: tvResults}} = await tvAPI.search(searchTerm);\r\n            this.setState({movieResults, tvResults})\r\n        } catch {\r\n            this.setState({error: \"Cant find movies information\"})\r\n        } finally {\r\n            this.setState({loading: false});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            searchTerm,\r\n            movieResults,\r\n            tvResults, error, loading\r\n        } = this.state;\r\n\r\n        return (<SearchPresenter searchTerm={searchTerm}\r\n                                 handleSubmit={this.handleSubmit.bind(this)}\r\n                                 movieResults={movieResults}\r\n                                 onChange={this.onChange.bind(this)}\r\n                                 tvResults={tvResults} error={error} loading={loading}></SearchPresenter>)\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"../../components/Loader\";\nimport Section from \"../../components/Section\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ TopRated, Popular, AiringToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title> TV shows | Nomflix </title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {Popular && Popular.length > 0 && (\n          <Section title=\"Popular\">\n            {Popular.map((show) => (\n              <Poster\n                imageURL={show.poster_path}\n                id={show.id}\n                title={show.name}\n                year={show.first_air_date?.substr(0, 4)}\n                rating={show.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n        {TopRated && TopRated.length > 0 && (\n          <Section title=\"Top Rated\">\n            {TopRated.map((show) => (\n              <Poster\n                imageURL={\n                  show.poster_path || require(\"../../assets/noPosterSmall.png\")\n                }\n                id={show.id}\n                title={show.name}\n                year={show.first_air_date?.substr(0, 4)}\n                rating={show.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n        {AiringToday && AiringToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {AiringToday.map((show) => (\n              <Poster\n                imageURL={\n                  show.poster_path || require(\"../../assets/noPosterSmall.png\")\n                }\n                id={show.id}\n                title={show.name}\n                year={show.first_air_date?.substr(0, 4)}\n                rating={show.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#FF0000\" text={error} />}\n      </Container>\n    )}\n  </>\n);\nTVPresenter.propTypes = {\n  TopRated: PropTypes.array,\n  Popular: PropTypes.array,\n  AiringToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from 'react'\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvAPI} from \"../../api\";\r\n\r\nexport default class TVContainer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            TopRated: null,\r\n            Popular: null,\r\n            AiringToday: null,\r\n            error: null,\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        try {\r\n            const {data: {results: TopRated}} = await tvAPI.TopRated();\r\n            const {data: {results: Popular}} = await tvAPI.Popular();\r\n            const {data: {results: AiringToday}} = await tvAPI.AiringToday();\r\n            this.setState({TopRated, Popular, AiringToday});\r\n        } catch {\r\n            this.setState({error:\"Cant find tv information\"})\r\n        } finally {\r\n            this.setState({loading: false})\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            TopRated, Popular,\r\n            AiringToday, error, loading\r\n        } = this.state;\r\n        return (<TVPresenter TopRated={TopRated}\r\n                            Popular={Popular}\r\n                            AiringToday={AiringToday} error={error} loading={loading}></TVPresenter>)\r\n    }\r\n\r\n}\r\n\r\n","import styled from \"styled-components\";\nimport React, { useState } from \"react\";\n\nconst Videos = ({ result }) => {\n  const [page, setPage] = useState(1);\n  const {\n    videos: { results },\n  } = result;\n\n  return (\n    <>\n      {results.length > 0 ? (\n        <IFRAME\n          frameBorder=\"0\"\n          src={`https://youtube.com/embed/${results[page - 1]?.key}`}\n        />\n      ) : (\n        <h2>Video Not Found</h2>\n      )}\n\n      <Pagination>\n        {results && results.length > 0 && (\n          <>\n            {page > 0 && (\n              <button onClick={() => setPage((prev) => prev - 1)}>\n                <i className=\"fas fa-chevron-left fa-5x\"></i>\n              </button>\n            )}\n\n            {page < results.length - 1 && (\n              <button onClick={() => setPage((prev) => prev + 1)}>\n                <i className=\"fas fa-chevron-right fa-5x\"></i>\n              </button>\n            )}\n          </>\n        )}\n      </Pagination>\n    </>\n  );\n};\n\nexport default Videos;\n\nconst IFRAME = styled.iframe`\n  position: absolute;\n  width: 100%;\n  height: 95%;\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  width: 100%;\n  position: absolute;\n  right: 30px;\n  bottom: 40%;\n\n  button {\n    background-color: inherit;\n    border: none;\n\n    &:hover {\n      border: solid;\n    }\n  }\n\n  i.fa-chevron-right {\n    color: white;\n    opacity: 0.5;\n    position: absolute;\n    bottom: 40%;\n    right: -80px;\n    z-index: 9;\n\n    &:hover {\n      opacity: 1;\n      transition: opacity 0.3s linear;\n    }\n  }\n\n  i.fa-chevron-left {\n    color: white;\n    position: absolute;\n    opacity: 0.5;\n    bottom: 40%;\n    left: -10px;\n    z-index: 9;\n\n    &:hover {\n      opacity: 1;\n      transition: opacity 0.3s linear;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst IMG = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 95px);\n  grid-template-rows: repeat(auto-fill, 95px);\n  grid-gap: 10px;\n\n  width: 100%;\n  height: 100%;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n\n  span {\n    &:first-child {\n      position: absolute;\n    }\n\n    &:not(:first-child) {\n      margin-top: 10px;\n    }\n\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Productions = ({ result }) => {\n  const { production_companies, production_countries } = result;\n  console.log(production_countries);\n  return (\n    <>\n      <IMG>\n        <span>Production Companies</span>\n        {production_companies.length > 0 &&\n          production_companies.map(\n            (company) =>\n              company.logo_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w300/${company.logo_path}`}\n                />\n              )\n          )}\n      </IMG>\n      <IMG>\n        <span>Production Countries</span>\n\n        {production_countries.length > 0 &&\n          production_countries.map((country) => (\n            <span\n              className={`flag-icon flag-icon-${country.iso_3166_1.toLowerCase()}`}\n            ></span>\n          ))}\n      </IMG>\n    </>\n  );\n};\n\nexport default Productions;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport noPoster from \"../../assets/noPosterSmall.png\";\n\nconst Grid = styled.div`\n  height: 100%;\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 100px);\n  grid-gap: 15px;\n`;\nconst Container = styled.div`\n  width: 100px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgImg});\n  background-size: cover;\n  height: 180px;\n  width: 100%;\n  background-position: center center;\n  border-radius: 15px;\n  transition: 0.5s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 3px;\n  position: relative;\n\n  &:hover {\n    ${Image} {\n      opacity: 0.5;\n      border: 0.3mm solid skyblue;\n    }\n  }\n}\n`;\nconst Title = styled.span`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 3px;\n  font-size: 12px; ;\n`;\n\nconst Year = styled.span`\n  text-align: start;\n  font-size: 12px;\n  opacity: 0.5;\n`;\nconst Pagination = styled.div`\n  display: flex;\n  width: 100%;\n  position: absolute;\n  right: 30px;\n  bottom: 40%;\n\n  button {\n    background-color: inherit;\n    border: none;\n\n    &:hover {\n      border: solid;\n    }\n  }\n\n  i.fa-chevron-right {\n    color: white;\n    opacity: 0.5;\n    position: absolute;\n    bottom: 40%;\n    right: -10px;\n    z-index: 9;\n\n    &:hover {\n      opacity: 1;\n      transition: opacity 0.3s linear;\n    }\n  }\n\n  i.fa-chevron-left {\n    color: white;\n    opacity: 0.5;\n    position: absolute;\n    bottom: 40%;\n    left: -10px;\n    z-index: 9;\n\n    &:hover {\n      opacity: 1;\n      transition: opacity 0.3s linear;\n    }\n  }\n`;\nconst Seasons = ({ result }) => {\n  const { seasons } = result;\n  const [page, setPage] = useState(1);\n  return (\n    <Grid>\n      {seasons.length > 0 &&\n        seasons.map((season, idx) => {\n          const { id, name, poster_path, air_date } = season;\n          return (\n            idx >= (page - 1) * 10 &&\n            idx < page * 10 && (\n              <Container>\n                <ImageContainer>\n                  <Image\n                    bgImg={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                        : require(\"../../assets/noPosterSmall.png\").default\n                    }\n                  />\n                </ImageContainer>\n                <Title>\n                  {name.length > 15 ? `${name?.substring(0, 15)}...` : name}\n                </Title>\n                <Year>{air_date?.substr(0, 4)}</Year>\n              </Container>\n            )\n          );\n        })}\n      <Pagination>\n        {seasons.length > 10 && page < seasons.length / 10 && (\n          <button onClick={() => setPage((prev) => prev + 1)}>\n            <i className=\"fas fa-chevron-right fa-5x\"></i>\n          </button>\n        )}\n        {seasons.length > 10 && page > seasons.length / 10 && (\n          <button onClick={() => setPage((prev) => prev - 1)}>\n            <i className=\"fas fa-chevron-left fa-5x\"></i>\n          </button>\n        )}\n      </Pagination>\n    </Grid>\n  );\n};\nexport default Seasons;\n","import React, { Component, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"../../components/Loader\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Message from \"../../components/Message\";\nimport Videos from \"./Videos\";\nimport Productions from \"./Productions\";\nimport Seasons from \"./Seasons\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Backdrop = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-image: url(\"https://image.tmdb.org/t/p/original/${(props) =>\n    props.bgImg}\");\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(\"https://image.tmdb.org/t/p/w500/${(props) =>\n    props.bgImg}\");\n  background-position: center center;\n  background-size: cover;\n  border-radius: 20px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\nconst Data = styled.div`\n  width: 70%;\n  position: relative;\n  margin-left: 15px;\n`;\n\nconst Title = styled.span`\n  font-size: 32px;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n  font-size: 15px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0px;\n  display: flex;\n  align-items: center;\n`;\nconst Item = styled.span`\n  font-size: 15px;\n  align-items: center;\n\n  img {\n    height: 30px;\n    width: 36px;\n  }\n`;\n\nconst Summary = styled.p`\n  font-size: 12px;\n  width: 50%;\n  line-height: 1.5;\n  opacity: 0.7;\n`;\n\nconst TabContent = styled.div`\n  display: grid;\n\n  grid-template-rows: repeat(auto-fill);\n  grid-gap: 20px;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 15px;\n\n  background-color: ${(props) => (props.activeTab === 0 ? \"black\" : \"inherit\")};\n  transition: background-color 1s ease-in-out;\n`;\n\nconst Menu = styled.div`\n  position: absolute;\n\n  margin-left: 30px;\n  bottom: 80px;\n  width: 50%;\n  height: 50%;\n`;\nconst Tabs = styled.div`\n  height: 40px;\n  display: flex;\n  margin: 0;\n  border: none;\n`;\n\nconst Tab = styled.button`\n  background: linear-gradient(orange, pink);\n  opacity: ${(props) => (props.isActive ? 1 : 0.5)};\n  border-radius: 10px 10px 0 0;\n  font-weight: 600;\n\n  font-size: 15px;\n  border: none;\n  padding: 10px;\n  height: 40px;\n  width: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: black;\n\n  &:hover {\n    border: 1px solid green;\n  }\n`;\n\nconst DetailPresenter = ({\n  result,\n  isMovie,\n  error,\n  loading,\n  match,\n  location,\n}) => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  return (\n    <>\n      {loading ? (\n        <>\n          <Helmet>\n            <title> Loading... | Nomflix </title>\n          </Helmet>\n          <Loader />\n        </>\n      ) : error ? (\n        <Message text={error} />\n      ) : (\n        <Container>\n          <Helmet>\n            <title> {isMovie ? result?.title : result?.name} | Nomflix </title>\n          </Helmet>\n          <Backdrop bgImg={result?.backdrop_path}></Backdrop>\n          <Content>\n            <Cover\n              bgImg={\n                result.poster_path\n                  ? result.poster_path\n                  : require(\"../../assets/noPosterSmall.png\")\n              }\n            />\n            <Data>\n              <Title>{isMovie ? result.title : result.name}</Title>\n              <ItemContainer>\n                <Item>\n                  {isMovie\n                    ? result.release_date?.substr(0, 4)\n                    : result.first_air_date?.substr(0, 4)}\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {result?.genres.map((genre) => genre.name).join(\"  /  \")}\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {isMovie\n                    ? `${result?.runtime}min`\n                    : result?.episode_run_time\n                        .map((runtime) => `${runtime}min`)\n                        .join(\" / \")}\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {isMovie && (\n                    <a href={`https://imdb.com/title/${result.imdb_id}`}>\n                      <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/69/IMDB_Logo_2016.svg\" />\n                    </a>\n                  )}\n                </Item>\n              </ItemContainer>\n              <Summary>{result?.overview}</Summary>\n\n              <Menu>\n                <Tabs>\n                  <Tab onClick={() => setActiveTab(0)}>Videos</Tab>\n                  <Tab onClick={() => setActiveTab(1)}>Productions</Tab>\n                  {!isMovie && (\n                    <Tab onClick={() => setActiveTab(2)}>Seasons</Tab>\n                  )}\n                </Tabs>\n                <TabContent activeTab={activeTab}>\n                  {activeTab === 0 && <Videos result={result} />}\n                  {activeTab === 1 && <Productions result={result} />}\n                  {activeTab === 2 && <Seasons result={result} />}\n                </TabContent>\n              </Menu>\n            </Data>\n          </Content>\n        </Container>\n      )}\n    </>\n  );\n};\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  isMovie: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  onClickMenu: PropTypes.func.isRequired,\n  activeTab: PropTypes.number.isRequired,\n};\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\nimport { moviesAPI, tvAPI } from \"../../api\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { Route, Switch } from \"react-router-dom\";\n\nexport default class DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      history: { push },\n      match: {\n        params: { id },\n      },\n    } = this.props;\n    const { isMovie, loading, error } = this.state;\n    const parsedID = parseInt(id);\n\n    if (isNaN(parsedID)) {\n      push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesAPI.movieDetail(parsedID));\n      } else {\n        ({ data: result } = await tvAPI.showDetail(parsedID));\n      }\n    } catch {\n      this.setState({ error: \"Cant find\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  onClickMenu(id) {\n    this.setState({ activeTab: id });\n  }\n\n  render() {\n    const { match, history, location } = this.props;\n    return (\n      <>\n        <DetailPresenter\n          {...this.props}\n          onClickMenu={this.onClickMenu.bind(this)}\n          {...this.state}\n        />\n      </>\n    );\n  }\n}\n","import { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"./Header\";\nimport React from \"react\";\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/tv\" exact component={TV} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/movie/:id\" component={Detail} />\n          <Route path=\"/show/:id\" component={Detail} />\n          <Redirect from=\"*\" to=\"/\"></Redirect>\n        </Switch>\n      </>\n    </BrowserRouter>\n  );\n}; //route에는 history, location, match props가 기본으로 주어짐 by default\nexport default Router; // switch: only one router at a time\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset}\n\n  ;\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 14px;\n    background-color: rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 50px;\n  }\n`;\n\nexport default GlobalStyles;\n","import { Component } from \"react\";\nimport Header from \"./Header\";\nimport \"flag-icon-css/css/flag-icon.min.css\";\nimport Router from \"components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './api';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}